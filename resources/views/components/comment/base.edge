@set('rootComments', comments.filter(c => !c.replyTo))

<div x-data="{
  editId: null,
  createId: null,
  create(createId) {
    this.cancel()
    this.createId = createId
  },
  edit(editId) {
    this.cancel()
    this.editId = editId
  },
  cancel() {
    this.editId = null
    this.createId = null
  },
  async toggleLike(commentId) {
    const { data } = await axios.post(`/api/comments/${commentId}/like`)
    const likeIconEl = document.querySelector(`#comment${commentId} .btn-hover-fill`)
    const countEl = document.querySelector(`#comment${commentId} .btn-count`)
    
    if (data.wasRemoved) {
      likeIconEl.classList.remove('active')
      countEl.textContent = Number(countEl.textContent) - 1
    } else {
      likeIconEl.classList.add('active')
      countEl.textContent = Number(countEl.textContent) + 1
    }
  }
}">
  <h4 class="font-semibold mt-6">Comment</h4>

  @!comment.form({ postId })

  <div class="-ml-8 mt-6">
    @!comment.list({ postId, comments, nodeComments: rootComments })
  </div>
</div>
